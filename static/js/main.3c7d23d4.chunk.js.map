{"version":3,"sources":["components/ContactForm.module.scss","components/ContactList/ContactList.module.scss","components/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js","components/Filter/Filter.module.scss"],"names":["module","exports","ContactForm","state","name","number","handleChange","evt","setState","currentTarget","value","handleSubmit","preventDefault","props","onClick","this","id","className","styles","formStyle","htmlFor","labelInput","inputStyle","type","pattern","title","onChange","required","formButton","Component","ContactList","contacts","onDelete","console","log","listStyle","map","contact","item","itemInternal","deleteButton","Filter","filterContainer","filterStyle","defaultProps","App","filter","addContact","find","alert","uuidv4","changeFilter","target","getFilteredArray","toUpperCase","includes","deleteContact","nameForDelete","prevState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c7d23d4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formStyle\":\"ContactForm_formStyle__216wU\",\"inputStyle\":\"ContactForm_inputStyle__1LN6k\",\"labelInput\":\"ContactForm_labelInput__3xYuf\",\"formButton\":\"ContactForm_formButton__1yEe6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listStyle\":\"ContactList_listStyle__1JXOj\",\"number\":\"ContactList_number__2L9PM\",\"item\":\"ContactList_item__3FRPe\",\"deleteButton\":\"ContactList_deleteButton__2jZi7\"};","import { Component } from \"react\";\r\nimport styles from './ContactForm.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class ContactForm extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n\r\n    handleChange = (evt) => {\r\n      this.setState({ [evt.currentTarget.name]: evt.currentTarget.value });\r\n    }\r\n\r\n    handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        const { name, number } = this.state;\r\n        this.props.onClick(name, number);\r\n        this.setState({ name: '', number: '' });\r\n    }\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n        return (\r\n            <form id=\"contactForm\" className={styles.formStyle}>\r\n                <label htmlFor=\"contactName\" className={styles.labelInput}>Name</label>\r\n                <input\r\n                    id=\"contactName\"\r\n                    className={styles.inputStyle}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. \r\n                    Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    onChange={this.handleChange}\r\n                    required\r\n                />\r\n                <label htmlFor=\"contactNumber\" className={styles.labelInput}>Number</label>\r\n                <input\r\n                    id=\"contactNumber\"\r\n                    className={styles.inputStyle}\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    value={number}\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    onChange={this.handleChange}\r\n                    required\r\n                />\r\n                <button\r\n                    type=\"button\"\r\n                    value=\"Submit\"\r\n                    className={styles.formButton}\r\n                    onClick={this.handleSubmit}\r\n                >Add contact</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nContactForm.propTypes = {\r\n    onClick: PropTypes.func.isRequired\r\n}\r\n","import styles from './ContactList.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const ContactList = ({ contacts, onDelete }) => {\r\n    console.log(\"Contactlist:\");\r\n    console.log(contacts);\r\n    return (\r\n        <ul className={styles.listStyle}>\r\n            {contacts.map(contact => {\r\n                return (\r\n                    <li key={contact.id} className={styles.item}>\r\n                        <div className={styles.itemInternal}>\r\n                        <span className={styles.name}>{contact.name}</span>\r\n                            :<span className={styles.number}>{contact.number}</span>\r\n                        \r\n                            <button type='button' name={contact.name} className={styles.deleteButton} onClick={onDelete}>Delete</button>\r\n                        </div>\r\n                    </li>\r\n                )\r\n            })}\r\n        </ul>      \r\n    );\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.shape({\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired\r\n    }))\r\n}\r\n","import styles from './Filter.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Filter = ({ value, onChange }) => {\r\n    return (\r\n        <div className={styles.filterContainer}>\r\n            <label htmlFor=\"contactName\" className={styles.labelInput}>Find contacts by name</label>\r\n            <input\r\n                id=\"filter\"\r\n                className={styles.filterStyle}\r\n                type=\"text\"\r\n                name=\"filter\"\r\n                value={value}\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. \r\n                    Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                onChange={onChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nFilter.defaultProps = {\r\n    value: ''\r\n}\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired\r\n}","import './App.css';\nimport { Component } from 'react';\nimport { render } from '@testing-library/react';\nimport { ContactForm } from './components/ContactForm';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ContactList } from './components/ContactList';\nimport { Filter } from './components/Filter';\n\nclass App extends Component {\n\n  state = {\n    contacts: [\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    filter: ''\n  }\n\n  addContact = (name, number) => {\n    const { contacts } = this.state;\n    if (contacts.find(contact => contact.name === name)) {\n      alert(name + ' is already in contacts');\n      return;\n    }\n    const contact = { id: uuidv4(), name: name, number: number };\n    this.setState(({ contacts }) => ({contacts: [...contacts, contact]}));\n  }\n\n  changeFilter = (evt) => {\n    this.setState({ filter: evt.target.value });\n  }\n\n  getFilteredArray = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact => contact.name.toUpperCase().includes(filter.toUpperCase()),0);\n  }\n\n  deleteContact = (evt) => {\n    const nameForDelete = evt.target.name;\n    const { contacts } = this.state;\n    this.setState((prevState) => (\n      { contacts: prevState.contacts.filter(contact => contact.name !== nameForDelete) }\n    ));\n  }\n\n  render() {\n    const { contacts, name, filter } = this.state;\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Phonebook</h1>\n          <ContactForm onClick={this.addContact} />\n          <h2>Contacts</h2>\n          <Filter value={filter} onChange={this.changeFilter}/>\n          <ContactList contacts={this.getFilteredArray()} onDelete={this.deleteContact} />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContainer\":\"Filter_filterContainer__2cLMi\",\"filterStyle\":\"Filter_filterStyle__2BXS1\",\"labelInput\":\"Filter_labelInput__6G3aq\"};"],"sourceRoot":""}